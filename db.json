{"meta":{"version":1,"warehouse":"4.0.2"},"models":{"Asset":[{"_id":"node_modules/hexo-theme-aurora/source/favicon.ico","path":"favicon.ico","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-aurora/source/icons/favicon-16x16.png","path":"icons/favicon-16x16.png","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-aurora/source/icons/favicon-32x32.png","path":"icons/favicon-32x32.png","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-aurora/source/static/css/about.32dfa3b0.css","path":"static/css/about.32dfa3b0.css","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-aurora/source/static/css/app.0d31776f.css","path":"static/css/app.0d31776f.css","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-aurora/source/static/css/archives.c0d49bd5.css","path":"static/css/archives.c0d49bd5.css","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-aurora/source/static/css/categories.10e2be12.css","path":"static/css/categories.10e2be12.css","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-aurora/source/static/css/404.1a6cd5bd.css","path":"static/css/404.1a6cd5bd.css","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-aurora/source/static/css/chunk-libs.eebac533.css","path":"static/css/chunk-libs.eebac533.css","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-aurora/source/static/css/post.9f951a60.css","path":"static/css/post.9f951a60.css","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-aurora/source/static/css/page.749ad047.css","path":"static/css/page.749ad047.css","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-aurora/source/static/css/result.10e2be12.css","path":"static/css/result.10e2be12.css","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-aurora/source/static/css/tags.10e2be12.css","path":"static/css/tags.10e2be12.css","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-aurora/source/static/img/default-cover.df7c128c.jpg","path":"static/img/default-cover.df7c128c.jpg","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-aurora/source/static/js/404.00d640a8.js","path":"static/js/404.00d640a8.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-aurora/source/static/js/about.024aacd1.js","path":"static/js/about.024aacd1.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-aurora/source/static/js/app.6d2c358d.js","path":"static/js/app.6d2c358d.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-aurora/source/static/js/archives.574ac664.js","path":"static/js/archives.574ac664.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-aurora/source/static/js/categories.90aa5475.js","path":"static/js/categories.90aa5475.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-aurora/source/static/js/chunk-libs.dc6146cd.js","path":"static/js/chunk-libs.dc6146cd.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-aurora/source/static/js/page.a02618ad.js","path":"static/js/page.a02618ad.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-aurora/source/static/js/post.cebfbaa4.js","path":"static/js/post.cebfbaa4.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-aurora/source/static/js/result.39470350.js","path":"static/js/result.39470350.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-aurora/source/static/js/tags.2ad613f5.js","path":"static/js/tags.2ad613f5.js","modified":1,"renderable":1}],"Cache":[{"_id":"source/.DS_Store","hash":"fa570b905fa51a1152f012e962c74ac480c0f6b5","modified":1688378749689},{"_id":"source/about/index.md","hash":"59a6637f28c77c073099f79d29287978c46d4954","modified":1688374768386},{"_id":"source/_statics/.DS_Store","hash":"167b69db9498cf39c53ae2beb358dc6d16d8fa24","modified":1688378751135},{"_id":"source/_statics/images/webpack-intro.png","hash":"47645d00bb74283fbbf7cbe3891a72e084c56990","modified":1686910776837},{"_id":"source/_posts/webpack/intro.md","hash":"f1163ac9777c27fe9e9985d791b50ce04530ee6e","modified":1688378945320},{"_id":"node_modules/hexo-theme-aurora/.browserslistrc","hash":"db215b841182d2af3259a1c1d6e1957bca333970","modified":1688369607769},{"_id":"node_modules/hexo-theme-aurora/CHANGELOG.md","hash":"e68f3af8af17d326a48e1b317e01d7429193217e","modified":1688369607769},{"_id":"node_modules/hexo-theme-aurora/CHANGELOG_CN.md","hash":"5d13c251e8b77fd86870da50f3be98f8822edc66","modified":1688369607769},{"_id":"node_modules/hexo-theme-aurora/LICENSE","hash":"21cf269018b0cf04e1126b6b9b1a5e6af7c5e61f","modified":1688369607769},{"_id":"node_modules/hexo-theme-aurora/README.md","hash":"c50f58b08b75780990c18ab85761e3e24aac0d90","modified":1688369607769},{"_id":"node_modules/hexo-theme-aurora/_config.yml","hash":"e6b2335cb393444b8a1fc1ad65331f4a30bc8915","modified":1688369607769},{"_id":"node_modules/hexo-theme-aurora/package.json","hash":"1b312a6a2de107ba9dc952614f1078c78664a4e4","modified":1688369607769},{"_id":"node_modules/hexo-theme-aurora/jest.config.js","hash":"425f08cb718a56630ce61ae0686f35c55ef565df","modified":1688369607769},{"_id":"node_modules/hexo-theme-aurora/.circleci/config.yml","hash":"534051be311581f69aa8287120275a04539290e4","modified":1688369607769},{"_id":"node_modules/hexo-theme-aurora/layout/index.ejs","hash":"94732830a65b718d2fa506b8598df44f14399fd8","modified":1688369607769},{"_id":"node_modules/hexo-theme-aurora/data/cn.yml","hash":"4f5dcc1e2953df7a8e4e683c1a9115f6e0041f5e","modified":1688369607769},{"_id":"node_modules/hexo-theme-aurora/data/en.yml","hash":"7bbd6c0da0ae2f93f8a786a3be77fbe4e95a787e","modified":1688369607769},{"_id":"node_modules/hexo-theme-aurora/scripts/index.js","hash":"2a3c62a860581ee6813ca4bcaa7c952f614e818c","modified":1688369607769},{"_id":"node_modules/hexo-theme-aurora/source/favicon.ico","hash":"c39d3ad80489cffed0d3df82c8cb05a049ab39a3","modified":1688369607769},{"_id":"node_modules/hexo-theme-aurora/source/icons/favicon-16x16.png","hash":"849cad2a5ae49fa54c20372f7a21ae95192bafcf","modified":1688369607769},{"_id":"node_modules/hexo-theme-aurora/source/static/css/about.32dfa3b0.css","hash":"614ef7c4e52877c76ffddb26192bf8fffddcb8d8","modified":1688369607769},{"_id":"node_modules/hexo-theme-aurora/source/icons/favicon-32x32.png","hash":"9dbabf6f4d825da99dcb2e91583755ae8d3b3ff4","modified":1688369607769},{"_id":"node_modules/hexo-theme-aurora/source/static/css/archives.c0d49bd5.css","hash":"c56213315c57254d0a6e6301ef24c2186fef4d2b","modified":1688369607769},{"_id":"node_modules/hexo-theme-aurora/source/static/css/categories.10e2be12.css","hash":"e0f686c442936311dd85f11a06f3937007758b90","modified":1688369607769},{"_id":"node_modules/hexo-theme-aurora/source/static/css/post.9f951a60.css","hash":"8e360582d745d6483fdfc18c46f75897b44721a6","modified":1688369607769},{"_id":"node_modules/hexo-theme-aurora/source/static/css/chunk-libs.eebac533.css","hash":"41226b6c29aadcc6190fe7c2c4c37464855b8453","modified":1688369607769},{"_id":"node_modules/hexo-theme-aurora/source/static/css/404.1a6cd5bd.css","hash":"a7a4d83756520d8f6c410ac0ffe9a45d63868113","modified":1688369607769},{"_id":"node_modules/hexo-theme-aurora/source/static/css/page.749ad047.css","hash":"6fcf0e6f3c628954c5f8105791e0e7f3e6512da6","modified":1688369607769},{"_id":"node_modules/hexo-theme-aurora/source/static/css/result.10e2be12.css","hash":"e0f686c442936311dd85f11a06f3937007758b90","modified":1688369607769},{"_id":"node_modules/hexo-theme-aurora/source/static/img/default-cover.df7c128c.jpg","hash":"1934ace0c6f2397d15729f9b08cc4d42e45bf437","modified":1688369607769},{"_id":"node_modules/hexo-theme-aurora/source/static/css/tags.10e2be12.css","hash":"e0f686c442936311dd85f11a06f3937007758b90","modified":1688369607769},{"_id":"node_modules/hexo-theme-aurora/source/static/js/404.00d640a8.js","hash":"74f1da9e0f953e73e4fe1a6554433f56fdcdf54d","modified":1688369607769},{"_id":"node_modules/hexo-theme-aurora/source/static/js/categories.90aa5475.js","hash":"0dde3d731fc665962a4c330338a2c663c330be26","modified":1688369607769},{"_id":"node_modules/hexo-theme-aurora/source/static/js/about.024aacd1.js","hash":"7ce2b3f7d232dd3b3930ac993bb841452e2cde89","modified":1688369607769},{"_id":"node_modules/hexo-theme-aurora/source/static/js/archives.574ac664.js","hash":"fbb094fb4f7a01bffd6975aca27142935bfdca73","modified":1688369607769},{"_id":"node_modules/hexo-theme-aurora/source/static/js/post.cebfbaa4.js","hash":"53586f9dab5886a366e9397eb17088e74af5cde1","modified":1688369607769},{"_id":"node_modules/hexo-theme-aurora/source/static/js/page.a02618ad.js","hash":"db775fbfbaa1cf8bbf4cc4f2b0a869519d508e3a","modified":1688369607769},{"_id":"node_modules/hexo-theme-aurora/source/static/js/result.39470350.js","hash":"f6f5ab2ca7274dad169ec600a419d1a2aeb2347c","modified":1688369607769},{"_id":"node_modules/hexo-theme-aurora/source/static/js/tags.2ad613f5.js","hash":"4f49139e435788710115fc884dc26a5b1e0d4833","modified":1688369607769},{"_id":"node_modules/hexo-theme-aurora/scripts/lib/generators/index.js","hash":"dfbb0fdbf990bd67684ed891a4aaa1fd8dcd23f2","modified":1688369607769},{"_id":"node_modules/hexo-theme-aurora/scripts/lib/generators/category.js","hash":"0ae21ffcf6e471ebfb72ac62a833991fae86ec8a","modified":1688369607769},{"_id":"node_modules/hexo-theme-aurora/scripts/lib/filters/index.js","hash":"5eacff9446dd6c9a7eb0a0c84be9187055440454","modified":1688369607769},{"_id":"node_modules/hexo-theme-aurora/scripts/lib/generators/page.js","hash":"1be54ea9cdf8e293e67bf457075fcdd8a72b8779","modified":1688369607769},{"_id":"node_modules/hexo-theme-aurora/scripts/lib/generators/post.js","hash":"76c3268e8b6887fb1fd11c4d71004aad9dc215fc","modified":1688369607769},{"_id":"node_modules/hexo-theme-aurora/scripts/lib/generators/tag.js","hash":"975e79e73d2503a33dbc63655b948100cc46d44f","modified":1688369607769},{"_id":"node_modules/hexo-theme-aurora/scripts/lib/generators/site.js","hash":"b5f5ce813b4b0b322eceb11b036dc65201604256","modified":1688369607769},{"_id":"node_modules/hexo-theme-aurora/scripts/lib/generators/statistic.js","hash":"1c641956e15cec96490de16a88ccc7bec0c9d5c4","modified":1688369607769},{"_id":"node_modules/hexo-theme-aurora/scripts/lib/generators/search.js","hash":"a2a636e1df76efdcaca37226b490afa539ce766b","modified":1688369607769},{"_id":"node_modules/hexo-theme-aurora/scripts/lib/helpers/mapper.js","hash":"7a99508d910321b90b4afa0df02ad90f62336901","modified":1688369607769},{"_id":"node_modules/hexo-theme-aurora/scripts/lib/helpers/toc.js","hash":"5c7348c550ef7f164d492847801a360cdefc60a2","modified":1688369607769},{"_id":"node_modules/hexo-theme-aurora/scripts/lib/helpers/truncate-html.js","hash":"49d4832af027eabe5b8383a24e66dceae761533e","modified":1688369607769},{"_id":"node_modules/hexo-theme-aurora/scripts/lib/helpers/symbols-count-time.js","hash":"d1a81e31b2988edcdf4b4761cec7326a980f097a","modified":1688369607769},{"_id":"node_modules/hexo-theme-aurora/scripts/lib/helpers/utils.js","hash":"93ff75f0e35a1dc40d5406cc097f5988dd820600","modified":1688369607769},{"_id":"node_modules/hexo-theme-aurora/scripts/lib/injector/index.js","hash":"7ca562ea3af3068ee925b5a8afdce0eaa1e15e64","modified":1688369607769},{"_id":"node_modules/hexo-theme-aurora/source/static/css/app.0d31776f.css","hash":"43b43acd76bd8dc22f34cc49c7e026c45c3a5004","modified":1688369607769},{"_id":"node_modules/hexo-theme-aurora/source/static/js/app.6d2c358d.js","hash":"e176c20c22ce36e38935f463977e9b89b281c715","modified":1688369607769},{"_id":"node_modules/hexo-theme-aurora/source/static/js/chunk-libs.dc6146cd.js","hash":"534266637d09abf39278f4d3a21bd36728740105","modified":1688369607769}],"Category":[{"name":"构建工具","_id":"cljmp8e340002ek2zf2hq2shq"}],"Data":[],"Page":[{"title":"about","date":"2023-07-03T07:46:53.000Z","_content":"\n- hello about page","source":"about/index.md","raw":"---\ntitle: about\ndate: 2023-07-03 15:46:53\n---\n\n- hello about page","updated":"2023-07-03T08:59:28.386Z","path":"about/index.html","comments":1,"layout":"page","_id":"cljmp8e320001ek2zc8q4gz9z","content":"<ul>\n<li>hello about page</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<ul>\n<li>hello about page</li>\n</ul>\n"}],"Post":[{"title":"Webpack 入门介绍","date":"2023-07-03T07:46:53.000Z","_content":"\nWebpack是一个现代化的静态模块打包工具。它是一个用于构建前端项目的工具，通过分析项目中的各种资源（如JavaScript、CSS、图片等），将它们打包成最终的静态资源，以供浏览器加载和运行。\n\n<!-- more -->\n\n## 前言\n\n在过去的前端开发中，经常会使用的主要构建工具是 [``Gulp``](https://gulpjs.com/) 和 [``Grunt``](https://gruntjs.com/)。它们是基于任务（Stream / Task）的构建工具，通过定义一系列任务来完成前端项目的构建和优化工作。这些任务可以包括文件合并、混淆、压缩、编译预处理器、静态资源处理等。\n\nGulp 和 Grunt 在当时的前端开发中起到了很大的作用，简化了前端项目的构建流程，提高了开发效率。开发者可以通过编写任务配置文件，指定各个任务的执行顺序和所需的操作，然后通过命令行工具执行这些任务。\n\n然而，随着前端开发的快速发展和复杂化，Gulp 和 Grunt 的局限性逐渐凸显出来。它们的配置方式相对繁琐，需要编写大量的配置代码，而且配置文件的维护和管理也变得困难。在处理大型项目时，任务执行的效率也不够高，构建过程的速度较慢。\n\nWebpack 应运而生。Webpack 是一个现代化的静态模块打包工具，它引入了模块化的概念，并通过构建依赖图来管理模块之间的依赖关系。与 Gulp 和 Grunt 不同，Webpack 更加注重于模块的处理和构建过程的优化。\n\n## 1. 简介\n\nWebpack是一个模块打包工具，它可以将多个模块打包成最终的静态资源文件，如JavaScript、CSS、图片等。Webpack提供了丰富的功能和插件生态系统，可以进行模块化开发、代码分割、按需加载、资源优化等，使前端项目的构建过程更高效和可靠。  \n\nWebpack 的主要优势包括：\n- ```模块化支持```：Webpack 支持各种模块化规范，如 CommonJS、ES modules、AMD 等，能够将项目拆分为模块，并按需加载，提高代码的可维护性和复用性。\n- ```强大的插件系统```：Webpack 提供了强大的插件系统，使得开发者可以通过插件扩展和定制化构建过程。可以通过各种插件实现代码压缩、文件合并、资源优化等优化操作。\n- ```开发环境支持```：Webpack 提供了开发环境下的热重载、模块热替换等功能，能够提高开发效率和调试体验。\n- ```强大的生态系统```：Webpack 拥有庞大的社区和丰富的生态系统，有大量的插件和工具可供选择，能够满足各种项目需求。\n\n![img_1.png](/_statics/images/webpack-intro.png)\n\n## 2. 安装与使用\n\n### 2.1 安装\n\n接下来我们新建一个文件夹，然后在项目本地安装 webpack 及对应的 cli，\n> 注：webpack 也可以全局安装，但一般不推荐全局安装 webpack。这会将你项目中的 webpack 锁定到指定版本，并且在使用不同的 webpack 版本的项目中， 可能会导致构建失败\n  \n<br />\n\n```shell\n\nmkdir webpack-demo && cd webpack-demo \n\nnpm init -y\n\nnpm i webpack webpack-cli -D\n```\n\n```\n├── package.json\n├── package-lock.json\n└── src\n    └── index.js\n```\n\n然后我们更新一下 ``package.json`` ：\n\n```shell\n{\n  \"name\": \"webpack-demo\",\n  \"version\": \"1.0.0\",\n  \"description\": \"\",\n  \"main\": \"index.js\",\n  \"scripts\": {\n    \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\",\n    \"build\": \"webpack\"  // 新增\n  },\n  \"keywords\": [],\n  \"author\": \"\",\n  \"license\": \"ISC\",\n  \"devDependencies\": {\n    \"webpack\": \"^5.87.0\",\n    \"webpack-cli\": \"^5.1.4\"\n  }\n}\n```\n接着我们在终端执行 ``npm run build``，webpack 会自动以 ``src`` 目录下的 ``index.js`` 为入口进行打包，并将打包产物放置当前目录下的 dist 路径下：\n\n```shell\n├── dist\n│   └── main.js\n├── node_modules\n├── package.json\n├── package-lock.json\n└── src\n    └── main.js\n```\n\n\n### 2.2 使用配置文件\n\n我们在项目下新建 ``webpack.config.js`` 文件来作为 webpack 的配置文件，然后同样执行 ``npm run build``\n\n```javascript\nconst path = require('path')\nmodule.exports = {\n  entry: './src/index.js', // 入口文件\n  output: {\n    filename: 'main.js', // bundle 文件名\n    path: path.resolve(__dirname, 'dist') // bundle 目录\n  }\n}\n```\n这一段基本配置，和我们在上一步中直接执行 ``npm run build`` 功能是一样的，都会在当前目录下生成一个 ``dist`` 目录及对应的打包出来的 bundle 文件。\n","source":"_posts/webpack/intro.md","raw":"---\ntitle: Webpack 入门介绍\ndate: 2023-07-03 15:46:53\ntags: \n  webpack\ncategories:\n  构建工具\n---\n\nWebpack是一个现代化的静态模块打包工具。它是一个用于构建前端项目的工具，通过分析项目中的各种资源（如JavaScript、CSS、图片等），将它们打包成最终的静态资源，以供浏览器加载和运行。\n\n<!-- more -->\n\n## 前言\n\n在过去的前端开发中，经常会使用的主要构建工具是 [``Gulp``](https://gulpjs.com/) 和 [``Grunt``](https://gruntjs.com/)。它们是基于任务（Stream / Task）的构建工具，通过定义一系列任务来完成前端项目的构建和优化工作。这些任务可以包括文件合并、混淆、压缩、编译预处理器、静态资源处理等。\n\nGulp 和 Grunt 在当时的前端开发中起到了很大的作用，简化了前端项目的构建流程，提高了开发效率。开发者可以通过编写任务配置文件，指定各个任务的执行顺序和所需的操作，然后通过命令行工具执行这些任务。\n\n然而，随着前端开发的快速发展和复杂化，Gulp 和 Grunt 的局限性逐渐凸显出来。它们的配置方式相对繁琐，需要编写大量的配置代码，而且配置文件的维护和管理也变得困难。在处理大型项目时，任务执行的效率也不够高，构建过程的速度较慢。\n\nWebpack 应运而生。Webpack 是一个现代化的静态模块打包工具，它引入了模块化的概念，并通过构建依赖图来管理模块之间的依赖关系。与 Gulp 和 Grunt 不同，Webpack 更加注重于模块的处理和构建过程的优化。\n\n## 1. 简介\n\nWebpack是一个模块打包工具，它可以将多个模块打包成最终的静态资源文件，如JavaScript、CSS、图片等。Webpack提供了丰富的功能和插件生态系统，可以进行模块化开发、代码分割、按需加载、资源优化等，使前端项目的构建过程更高效和可靠。  \n\nWebpack 的主要优势包括：\n- ```模块化支持```：Webpack 支持各种模块化规范，如 CommonJS、ES modules、AMD 等，能够将项目拆分为模块，并按需加载，提高代码的可维护性和复用性。\n- ```强大的插件系统```：Webpack 提供了强大的插件系统，使得开发者可以通过插件扩展和定制化构建过程。可以通过各种插件实现代码压缩、文件合并、资源优化等优化操作。\n- ```开发环境支持```：Webpack 提供了开发环境下的热重载、模块热替换等功能，能够提高开发效率和调试体验。\n- ```强大的生态系统```：Webpack 拥有庞大的社区和丰富的生态系统，有大量的插件和工具可供选择，能够满足各种项目需求。\n\n![img_1.png](/_statics/images/webpack-intro.png)\n\n## 2. 安装与使用\n\n### 2.1 安装\n\n接下来我们新建一个文件夹，然后在项目本地安装 webpack 及对应的 cli，\n> 注：webpack 也可以全局安装，但一般不推荐全局安装 webpack。这会将你项目中的 webpack 锁定到指定版本，并且在使用不同的 webpack 版本的项目中， 可能会导致构建失败\n  \n<br />\n\n```shell\n\nmkdir webpack-demo && cd webpack-demo \n\nnpm init -y\n\nnpm i webpack webpack-cli -D\n```\n\n```\n├── package.json\n├── package-lock.json\n└── src\n    └── index.js\n```\n\n然后我们更新一下 ``package.json`` ：\n\n```shell\n{\n  \"name\": \"webpack-demo\",\n  \"version\": \"1.0.0\",\n  \"description\": \"\",\n  \"main\": \"index.js\",\n  \"scripts\": {\n    \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\",\n    \"build\": \"webpack\"  // 新增\n  },\n  \"keywords\": [],\n  \"author\": \"\",\n  \"license\": \"ISC\",\n  \"devDependencies\": {\n    \"webpack\": \"^5.87.0\",\n    \"webpack-cli\": \"^5.1.4\"\n  }\n}\n```\n接着我们在终端执行 ``npm run build``，webpack 会自动以 ``src`` 目录下的 ``index.js`` 为入口进行打包，并将打包产物放置当前目录下的 dist 路径下：\n\n```shell\n├── dist\n│   └── main.js\n├── node_modules\n├── package.json\n├── package-lock.json\n└── src\n    └── main.js\n```\n\n\n### 2.2 使用配置文件\n\n我们在项目下新建 ``webpack.config.js`` 文件来作为 webpack 的配置文件，然后同样执行 ``npm run build``\n\n```javascript\nconst path = require('path')\nmodule.exports = {\n  entry: './src/index.js', // 入口文件\n  output: {\n    filename: 'main.js', // bundle 文件名\n    path: path.resolve(__dirname, 'dist') // bundle 目录\n  }\n}\n```\n这一段基本配置，和我们在上一步中直接执行 ``npm run build`` 功能是一样的，都会在当前目录下生成一个 ``dist`` 目录及对应的打包出来的 bundle 文件。\n","slug":"webpack/intro","published":1,"updated":"2023-07-03T10:09:05.320Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cljmp8e2x0000ek2zapnmakov","content":"<p>Webpack是一个现代化的静态模块打包工具。它是一个用于构建前端项目的工具，通过分析项目中的各种资源（如JavaScript、CSS、图片等），将它们打包成最终的静态资源，以供浏览器加载和运行。</p>\n<span id=\"more\"></span>\n\n<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>在过去的前端开发中，经常会使用的主要构建工具是 <a href=\"https://gulpjs.com/\"><code>Gulp</code></a> 和 <a href=\"https://gruntjs.com/\"><code>Grunt</code></a>。它们是基于任务（Stream &#x2F; Task）的构建工具，通过定义一系列任务来完成前端项目的构建和优化工作。这些任务可以包括文件合并、混淆、压缩、编译预处理器、静态资源处理等。</p>\n<p>Gulp 和 Grunt 在当时的前端开发中起到了很大的作用，简化了前端项目的构建流程，提高了开发效率。开发者可以通过编写任务配置文件，指定各个任务的执行顺序和所需的操作，然后通过命令行工具执行这些任务。</p>\n<p>然而，随着前端开发的快速发展和复杂化，Gulp 和 Grunt 的局限性逐渐凸显出来。它们的配置方式相对繁琐，需要编写大量的配置代码，而且配置文件的维护和管理也变得困难。在处理大型项目时，任务执行的效率也不够高，构建过程的速度较慢。</p>\n<p>Webpack 应运而生。Webpack 是一个现代化的静态模块打包工具，它引入了模块化的概念，并通过构建依赖图来管理模块之间的依赖关系。与 Gulp 和 Grunt 不同，Webpack 更加注重于模块的处理和构建过程的优化。</p>\n<h2 id=\"1-简介\"><a href=\"#1-简介\" class=\"headerlink\" title=\"1. 简介\"></a>1. 简介</h2><p>Webpack是一个模块打包工具，它可以将多个模块打包成最终的静态资源文件，如JavaScript、CSS、图片等。Webpack提供了丰富的功能和插件生态系统，可以进行模块化开发、代码分割、按需加载、资源优化等，使前端项目的构建过程更高效和可靠。  </p>\n<p>Webpack 的主要优势包括：</p>\n<ul>\n<li><code>模块化支持</code>：Webpack 支持各种模块化规范，如 CommonJS、ES modules、AMD 等，能够将项目拆分为模块，并按需加载，提高代码的可维护性和复用性。</li>\n<li><code>强大的插件系统</code>：Webpack 提供了强大的插件系统，使得开发者可以通过插件扩展和定制化构建过程。可以通过各种插件实现代码压缩、文件合并、资源优化等优化操作。</li>\n<li><code>开发环境支持</code>：Webpack 提供了开发环境下的热重载、模块热替换等功能，能够提高开发效率和调试体验。</li>\n<li><code>强大的生态系统</code>：Webpack 拥有庞大的社区和丰富的生态系统，有大量的插件和工具可供选择，能够满足各种项目需求。</li>\n</ul>\n<p><img src=\"/_statics/images/webpack-intro.png\" alt=\"img_1.png\"></p>\n<h2 id=\"2-安装与使用\"><a href=\"#2-安装与使用\" class=\"headerlink\" title=\"2. 安装与使用\"></a>2. 安装与使用</h2><h3 id=\"2-1-安装\"><a href=\"#2-1-安装\" class=\"headerlink\" title=\"2.1 安装\"></a>2.1 安装</h3><p>接下来我们新建一个文件夹，然后在项目本地安装 webpack 及对应的 cli，</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>注：webpack 也可以全局安装，但一般不推荐全局安装 webpack。这会将你项目中的 webpack 锁定到指定版本，并且在使用不同的 webpack 版本的项目中， 可能会导致构建失败</p></blockquote>\n<br />\n\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">\nmkdir webpack-demo &amp;&amp; cd webpack-demo \n\nnpm init -y\n\nnpm i webpack webpack-cli -D</code></pre>\n\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">├── package.json\n├── package-lock.json\n└── src\n    └── index.js</code></pre>\n\n<p>然后我们更新一下 <code>package.json</code> ：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">&#123;\n  &quot;name&quot;: &quot;webpack-demo&quot;,\n  &quot;version&quot;: &quot;1.0.0&quot;,\n  &quot;description&quot;: &quot;&quot;,\n  &quot;main&quot;: &quot;index.js&quot;,\n  &quot;scripts&quot;: &#123;\n    &quot;test&quot;: &quot;echo \\&quot;Error: no test specified\\&quot; &amp;&amp; exit 1&quot;,\n    &quot;build&quot;: &quot;webpack&quot;  &#x2F;&#x2F; 新增\n  &#125;,\n  &quot;keywords&quot;: [],\n  &quot;author&quot;: &quot;&quot;,\n  &quot;license&quot;: &quot;ISC&quot;,\n  &quot;devDependencies&quot;: &#123;\n    &quot;webpack&quot;: &quot;^5.87.0&quot;,\n    &quot;webpack-cli&quot;: &quot;^5.1.4&quot;\n  &#125;\n&#125;</code></pre>\n<p>接着我们在终端执行 <code>npm run build</code>，webpack 会自动以 <code>src</code> 目录下的 <code>index.js</code> 为入口进行打包，并将打包产物放置当前目录下的 dist 路径下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">├── dist\n│   └── main.js\n├── node_modules\n├── package.json\n├── package-lock.json\n└── src\n    └── main.js</code></pre>\n\n\n<h3 id=\"2-2-使用配置文件\"><a href=\"#2-2-使用配置文件\" class=\"headerlink\" title=\"2.2 使用配置文件\"></a>2.2 使用配置文件</h3><p>我们在项目下新建 <code>webpack.config.js</code> 文件来作为 webpack 的配置文件，然后同样执行 <code>npm run build</code></p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">const path &#x3D; require(&#39;path&#39;)\nmodule.exports &#x3D; &#123;\n  entry: &#39;.&#x2F;src&#x2F;index.js&#39;, &#x2F;&#x2F; 入口文件\n  output: &#123;\n    filename: &#39;main.js&#39;, &#x2F;&#x2F; bundle 文件名\n    path: path.resolve(__dirname, &#39;dist&#39;) &#x2F;&#x2F; bundle 目录\n  &#125;\n&#125;</code></pre>\n<p>这一段基本配置，和我们在上一步中直接执行 <code>npm run build</code> 功能是一样的，都会在当前目录下生成一个 <code>dist</code> 目录及对应的打包出来的 bundle 文件。</p>\n","site":{"data":{}},"excerpt":"<p>Webpack是一个现代化的静态模块打包工具。它是一个用于构建前端项目的工具，通过分析项目中的各种资源（如JavaScript、CSS、图片等），将它们打包成最终的静态资源，以供浏览器加载和运行。</p>","more":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>在过去的前端开发中，经常会使用的主要构建工具是 <a href=\"https://gulpjs.com/\"><code>Gulp</code></a> 和 <a href=\"https://gruntjs.com/\"><code>Grunt</code></a>。它们是基于任务（Stream &#x2F; Task）的构建工具，通过定义一系列任务来完成前端项目的构建和优化工作。这些任务可以包括文件合并、混淆、压缩、编译预处理器、静态资源处理等。</p>\n<p>Gulp 和 Grunt 在当时的前端开发中起到了很大的作用，简化了前端项目的构建流程，提高了开发效率。开发者可以通过编写任务配置文件，指定各个任务的执行顺序和所需的操作，然后通过命令行工具执行这些任务。</p>\n<p>然而，随着前端开发的快速发展和复杂化，Gulp 和 Grunt 的局限性逐渐凸显出来。它们的配置方式相对繁琐，需要编写大量的配置代码，而且配置文件的维护和管理也变得困难。在处理大型项目时，任务执行的效率也不够高，构建过程的速度较慢。</p>\n<p>Webpack 应运而生。Webpack 是一个现代化的静态模块打包工具，它引入了模块化的概念，并通过构建依赖图来管理模块之间的依赖关系。与 Gulp 和 Grunt 不同，Webpack 更加注重于模块的处理和构建过程的优化。</p>\n<h2 id=\"1-简介\"><a href=\"#1-简介\" class=\"headerlink\" title=\"1. 简介\"></a>1. 简介</h2><p>Webpack是一个模块打包工具，它可以将多个模块打包成最终的静态资源文件，如JavaScript、CSS、图片等。Webpack提供了丰富的功能和插件生态系统，可以进行模块化开发、代码分割、按需加载、资源优化等，使前端项目的构建过程更高效和可靠。  </p>\n<p>Webpack 的主要优势包括：</p>\n<ul>\n<li><code>模块化支持</code>：Webpack 支持各种模块化规范，如 CommonJS、ES modules、AMD 等，能够将项目拆分为模块，并按需加载，提高代码的可维护性和复用性。</li>\n<li><code>强大的插件系统</code>：Webpack 提供了强大的插件系统，使得开发者可以通过插件扩展和定制化构建过程。可以通过各种插件实现代码压缩、文件合并、资源优化等优化操作。</li>\n<li><code>开发环境支持</code>：Webpack 提供了开发环境下的热重载、模块热替换等功能，能够提高开发效率和调试体验。</li>\n<li><code>强大的生态系统</code>：Webpack 拥有庞大的社区和丰富的生态系统，有大量的插件和工具可供选择，能够满足各种项目需求。</li>\n</ul>\n<p><img src=\"/_statics/images/webpack-intro.png\" alt=\"img_1.png\"></p>\n<h2 id=\"2-安装与使用\"><a href=\"#2-安装与使用\" class=\"headerlink\" title=\"2. 安装与使用\"></a>2. 安装与使用</h2><h3 id=\"2-1-安装\"><a href=\"#2-1-安装\" class=\"headerlink\" title=\"2.1 安装\"></a>2.1 安装</h3><p>接下来我们新建一个文件夹，然后在项目本地安装 webpack 及对应的 cli，</p>\n<blockquote>\n<p>注：webpack 也可以全局安装，但一般不推荐全局安装 webpack。这会将你项目中的 webpack 锁定到指定版本，并且在使用不同的 webpack 版本的项目中， 可能会导致构建失败</p>\n</blockquote>\n<br />\n\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">\nmkdir webpack-demo &amp;&amp; cd webpack-demo \n\nnpm init -y\n\nnpm i webpack webpack-cli -D</code></pre>\n\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">├── package.json\n├── package-lock.json\n└── src\n    └── index.js</code></pre>\n\n<p>然后我们更新一下 <code>package.json</code> ：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">&#123;\n  &quot;name&quot;: &quot;webpack-demo&quot;,\n  &quot;version&quot;: &quot;1.0.0&quot;,\n  &quot;description&quot;: &quot;&quot;,\n  &quot;main&quot;: &quot;index.js&quot;,\n  &quot;scripts&quot;: &#123;\n    &quot;test&quot;: &quot;echo \\&quot;Error: no test specified\\&quot; &amp;&amp; exit 1&quot;,\n    &quot;build&quot;: &quot;webpack&quot;  &#x2F;&#x2F; 新增\n  &#125;,\n  &quot;keywords&quot;: [],\n  &quot;author&quot;: &quot;&quot;,\n  &quot;license&quot;: &quot;ISC&quot;,\n  &quot;devDependencies&quot;: &#123;\n    &quot;webpack&quot;: &quot;^5.87.0&quot;,\n    &quot;webpack-cli&quot;: &quot;^5.1.4&quot;\n  &#125;\n&#125;</code></pre>\n<p>接着我们在终端执行 <code>npm run build</code>，webpack 会自动以 <code>src</code> 目录下的 <code>index.js</code> 为入口进行打包，并将打包产物放置当前目录下的 dist 路径下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">├── dist\n│   └── main.js\n├── node_modules\n├── package.json\n├── package-lock.json\n└── src\n    └── main.js</code></pre>\n\n\n<h3 id=\"2-2-使用配置文件\"><a href=\"#2-2-使用配置文件\" class=\"headerlink\" title=\"2.2 使用配置文件\"></a>2.2 使用配置文件</h3><p>我们在项目下新建 <code>webpack.config.js</code> 文件来作为 webpack 的配置文件，然后同样执行 <code>npm run build</code></p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">const path &#x3D; require(&#39;path&#39;)\nmodule.exports &#x3D; &#123;\n  entry: &#39;.&#x2F;src&#x2F;index.js&#39;, &#x2F;&#x2F; 入口文件\n  output: &#123;\n    filename: &#39;main.js&#39;, &#x2F;&#x2F; bundle 文件名\n    path: path.resolve(__dirname, &#39;dist&#39;) &#x2F;&#x2F; bundle 目录\n  &#125;\n&#125;</code></pre>\n<p>这一段基本配置，和我们在上一步中直接执行 <code>npm run build</code> 功能是一样的，都会在当前目录下生成一个 <code>dist</code> 目录及对应的打包出来的 bundle 文件。</p>"}],"PostAsset":[],"PostCategory":[{"post_id":"cljmp8e2x0000ek2zapnmakov","category_id":"cljmp8e340002ek2zf2hq2shq","_id":"cljmp8e380005ek2zf5h6cz5x"}],"PostTag":[{"post_id":"cljmp8e2x0000ek2zapnmakov","tag_id":"cljmp8e360003ek2zcho1ewr9","_id":"cljmp8e370004ek2z67dq9xaq"}],"Tag":[{"name":"webpack","_id":"cljmp8e360003ek2zcho1ewr9"}]}}